const express = require('express');
const path = require('path');
const morgan = require('morgan');
const bodyParser = require('body-parser');
const app = express();
const authRouter = require('./auth/auth-router.js');
const apiRouter = require('./api/api-router.js');
const { jwtAuth } = require('./auth/auth-config.js');
const exphbs = require('express-handlebars');

const User = require('../db/models/user');

// TODO: Remove this comment when no longer needed
// Use this to seed database with fake events
// NOTE: Need to define plan ID in test/seed/seed.js
// const seedEventDB = require('../test/seed/seed');
// seedEventDB();

app.use(morgan('[:date[clf]] | ":method :url" | STATUS: :status :res[content-length] ":referrer"'));

app.set('views', 'client/public/dist/'); //path where handlebars views are stored. This is rendered by webpack
app.engine('handlebars', exphbs({defaultLayout: 'main', layoutsDir: 'views/layouts/'})); //sets Handlebars
app.set('view engine', 'handlebars');

app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

app.use('/auth', authRouter);
app.use('/api', jwtAuth, apiRouter);

// Serve up static files
app.use(express.static(path.join(__dirname, '../client/public/dist')));

app.get('*', (req, res) => {
  res.render('index'); //renders index.handlebars generated by Webpack
});

module.exports = app;
